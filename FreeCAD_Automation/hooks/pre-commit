#!/bin/bash
echo "DEBUG: pre-commit hook trap-card triggered!" >&2
# ==============================================================================================
#                                 Verify and Retrieve Dependencies
# ==============================================================================================
# Import code used in this script
FUNCTIONS_FILE="FreeCAD_Automation/utils.sh"
source "$FUNCTIONS_FILE"

# ==============================================================================================
#                         Check if user allowed to modify .FCStd files
# ==============================================================================================
if [ "$REQUIRE_LOCKS" == "$TRUE" ]; then
    CURRENT_USER=$(git config --get user.name) || {
        echo "Error: git config user.name not set!" >&2
        exit $FAIL
    }

    CURRENT_LOCKS=$(git lfs locks | awk '$2 == "'$CURRENT_USER'" {print $1}') || {
        echo "Error: failed to list of active lock info." >&2
        exit $FAIL
    }

    # Get staged .lockfiles
    # Diff Filter => (A)dded / (C)opied / (D)eleted / (M)odified / (R)enamed / (T)ype changed / (U)nmerged / (X) unknown / (B)roken pairing
    STAGED_LOCKFILES=$(DIFF_INDEX=1 git diff-index --cached --name-only --diff-filter=CDMRTUXB HEAD | grep -i '\.lockfile$')
    echo -e "\nDEBUG: checking staged lockfiles: '$(echo $STAGED_LOCKFILES | xargs)'" >&2

    for lockfile in $STAGED_LOCKFILES; do
        echo -e "\nDEBUG: checking '$lockfile'...." >&2

        if echo "$CURRENT_LOCKS" | grep -q "$lockfile"; then
            echo "DEBUG: valid lock found for '$lockfile'" >&2
            :
        else
            echo "ERROR: User doesn't have lock for '$lockfile'... Aborting commit operation..." >&2
            exit $FAIL
        fi
    done
fi

exit $SUCCESS